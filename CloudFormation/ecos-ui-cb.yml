AWSTemplateFormatVersion: "2010-09-09"
Description: "Core resources to run on devops env"
Metadata:
  Generator: "ecos-ui"
Parameters:
  env:
    Description: Environment type (dev/test/impl/prod)
    Type: String
    AllowedValues:
      - dev
      - test
      - impl
      - prod
    Default: "dev"
  version:
    Description: Version number used for parameter store variables
    Type: String
    Default: v1
  serviceRole:
    Description: 
    Type: String
    Default: arn:aws:iam::058264367679:role/service-role/codebuild-ECO-service-role
   GithubRepoBranch:
    Description: The git branch that will be polled for changes
    Type: String
    Default: main
  GithubRepo:
    Description: The git repository base name
    Type: String
    Default: "ecos-ui"
 
Resources:
  # IAM role for codebuild project. Should give access all AWS resources needed by build and tests run by build.
  CodeBuildRole:
    Type: AWS::IAM::Role
    Name: ecos-ui-cb-role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: codebuild.amazonaws.com
  Codebuild1:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: false
      Cache:
        Type: NO_CACHE
      Description: Codebuild for ecos-ui
      Environment:
        Type: Linux EC2
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:5.0'
        ComputeType: EC2
        EnvironmentVariables:
          - Name:
            Value:
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      LogsConfig:
        CloudWatchLogs:
          GroupName:
          Status: ENABLED
          StreamName: 
      Name: ecos-ui-cb
      QueuedTimeoutInMinutes: 480
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: GITHUB
        Location: https://github.com/CivicActions/ecos_devops/tree/main/CloudFormation
        GitCloneDepth: 1
        ReportBuildStatus: false
      SourceVersion: !Ref sourceVersion
      TimeoutInMinutes: 20
      
   CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ecos-ui-cd
      Description: CodePipeline serverless deployer.
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/buildspecs/deploy.yml
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Environment:
        ComputeType: !Ref CodeBuildEnvironmentComputeType
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: 
            Value: !Ref 
      ServiceRole:!GetAtt CodeBuildRole.Arn
      # Pipeline for running build.
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ecos-ui-cp
      ArtifactStore:
        Location: !Ref BuildArtifactBucket
        Type: GitHub
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:

        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GithubRepoOwner
                Repo: !Ref GithubRepo
                Branch: !Ref GithubRepoBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceOutput

        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectTest
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: TestOutput
             - Name: TagRepo
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectTagRepo
              InputArtifacts:
                - Name: SourceOutput
                # Failure notifications

        - Name: Deploy
          Actions:
            - Name: Deploy
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeploy
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: TestOutput
   CodePipelineStateFailureEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Rule for sending failure notifications to SNS topic"
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Action Execution State Change
        detail:
          pipeline:
            - !Ref CodePipeline
          stage:
            - Deploy
            - Test
            - Source
          state:
            - FAILED
      State: "ENABLED"
      Targets:
        - Arn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:CodebuildNotifications"
          Id: "CodePipelineFailureNotifications"
          InputTransformer:
            InputTemplate: "https://us-east-1.console.aws.amazon.com/codesuite/codepipeline/pipelines?region=us-east-1&pipelines-meta=eyJmIjp7InRleHQiOiIifSwicyI6eyJwcm9wZXJ0eSI6InVwZGF0ZWQiLCJkaX/${AWS::StackName}/view"
            InputPathsMap:
              pipeline: "$.detail.pipeline"
              stage: "$.detail.stage"
              state: "$.detail.state"
  # Successful deployment notifications
  CodePipelineSuccessfulDeployEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Rule for sending failure notifications to SNS topic"
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Stage Execution State Change
        detail:
          pipeline:
            - !Ref CodePipeline
          stage:
            - Deploy
          state:
            - SUCCEEDED
      State: "ENABLED"
      Targets:
        - Arn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:CodebuildNotifications"
          Id: "CodePipelineSuccessfulDeployNotifications"
          InputTransformer:
            InputTemplate: !Sub '"${ENV} <stage> stage has <state> for <pipeline> pipeline! Pipeline view: https://us-east-1.console.aws.amazon.com/codesuite/codepipeline/pipelines?region=us-east-1&pipelines-meta=eyJmIjp7InRleHQiOiIifSwicyI6eyJwcm9wZXJ0eSI6InVwZGF0ZWQiLCJkaX${AWS::StackName}/view"'
            InputPathsMap:
              pipeline: "$.detail.pipeline"
              stage: "$.detail.stage"
              state: "$.detail.state"
